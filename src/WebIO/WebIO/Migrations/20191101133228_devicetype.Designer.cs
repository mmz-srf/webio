// <auto-generated />

#pragma warning disable CS8981 // The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
namespace Tpc.WebIO.Migrations
{
    using System;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;
    using Microsoft.EntityFrameworkCore.Metadata;
    using Microsoft.EntityFrameworkCore.Migrations;

    [DbContext(typeof(AppDbContext))]
    [Migration("20191101133228_devicetype")]
    partial class devicetype
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.ChangeLogEntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("FullInfo");

                    b.Property<string>("Summary");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("ChangeLog");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.DeviceDenormalizedProperties", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("InterfaceCount");

                    b.HasKey("Id");

                    b.ToTable("DevicesDenormalized");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.DeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Creator")
                        .HasMaxLength(100);

                    b.Property<string>("DeviceType")
                        .HasMaxLength(100);

                    b.Property<string>("ModificationComment");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Modifier")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.DevicePropertyValueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<Guid?>("DeviceId");

                    b.Property<string>("Key")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceProperties");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.InterfaceDenormalizedProperties", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("StreamsCountAncillaryReceive");

                    b.Property<int>("StreamsCountAncillarySend");

                    b.Property<int>("StreamsCountAudioReceive");

                    b.Property<int>("StreamsCountAudioSend");

                    b.Property<int>("StreamsCountVideoReceive");

                    b.Property<int>("StreamsCountVideoSend");

                    b.HasKey("Id");

                    b.ToTable("InterfacesDenormalized");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.InterfaceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Creator")
                        .HasMaxLength(100);

                    b.Property<Guid>("DeviceId");

                    b.Property<string>("InterfaceTemplate")
                        .HasMaxLength(100);

                    b.Property<string>("ModificationComment");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Modifier")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Interfaces");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.InterfacePropertyValueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<Guid?>("InterfaceId");

                    b.Property<string>("Key")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("InterfaceId");

                    b.ToTable("InterfaceProperties");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.StreamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Creator")
                        .HasMaxLength(100);

                    b.Property<int>("Direction");

                    b.Property<Guid>("InterfaceId");

                    b.Property<string>("ModificationComment");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Modifier")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Streams");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.StreamPropertyValueEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Key")
                        .HasMaxLength(100);

                    b.Property<Guid?>("StreamId");

                    b.Property<string>("Value")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("StreamId");

                    b.ToTable("StreamProperties");
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.DevicePropertyValueEntity", b =>
                {
                    b.HasOne("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.DeviceEntity", "Device")
                        .WithMany("Properties")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.InterfacePropertyValueEntity", b =>
                {
                    b.HasOne("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.InterfaceEntity", "Interface")
                        .WithMany("Properties")
                        .HasForeignKey("InterfaceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.StreamPropertyValueEntity", b =>
                {
                    b.HasOne("Tpc.WebIO.DataAccess.EntityFrameworkCore.Entities.StreamEntity", "Stream")
                        .WithMany("Properties")
                        .HasForeignKey("StreamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
